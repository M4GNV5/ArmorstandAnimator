<Window x:Class="ArmorstandAnimator.GUI.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:conv="clr-namespace:ArmorstandAnimator.GUI.XAML.Converters"
		xmlns:directx="clr-namespace:SharpDX.Toolkit;assembly=SharpDX.Toolkit.Game"
		Title="Armorstand Animator" Height="511" Width="769" Background="#FF37474F">
	<Window.Resources>
		<Style x:Key="ToolbarDark" TargetType="{x:Type ToolBar}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToolBar}">
						<Border>
							<DockPanel VerticalAlignment="Stretch" Height="25">
								<ItemsPresenter />
							</DockPanel>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ToolbarSection" TargetType="{x:Type MenuItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MenuItem">
						<Border x:Name="Border">
							<Grid Height="25">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
								</Grid.ColumnDefinitions>
								<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
								<ContentPresenter x:Name="HeaderHost" Margin="12,0,12,0" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" TextOptions.TextFormattingMode="Display" />
								<Popup x:Name="Popup" Placement="Bottom" HorizontalOffset="-3" VerticalOffset="-3" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
									<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="Transparent" BorderThickness="0" Padding="0">
										<Border.Effect>
											<DropShadowEffect ShadowDepth="0" />
										</Border.Effect>
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" />
									</Border>
								</Popup>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Icon" Value="{x:Null}">
								<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<Trigger Property="IsHighlighted" Value="true">
								<Setter Property="Background" TargetName="Border" Value="#80CBC4" />
								<Setter Property="TextBlock.Foreground" TargetName="HeaderHost" Value="Black" />
							</Trigger>
							<Trigger Property="IsHighlighted" Value="false">
								<Setter Property="Background" TargetName="Border" Value="#263238" />
								<Setter Property="TextBlock.Foreground" TargetName="HeaderHost" Value="White" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Border" Value="#263238" />
								<Setter Property="TextBlock.Foreground" TargetName="HeaderHost" Value="Gray" />
							</Trigger>
							<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
								<Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
								<Setter Property="Foreground" Value="Black" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="Pink" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ToolbarButton" TargetType="{x:Type MenuItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MenuItem">
						<Border x:Name="Border">
							<Grid Height="25">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
								</Grid.ColumnDefinitions>
								<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
								<ContentPresenter x:Name="HeaderHost" Margin="12,0,12,0" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" TextOptions.TextFormattingMode="Display" />
								<Popup x:Name="Popup" Placement="Right" HorizontalOffset="-5" VerticalOffset="-3" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
									<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="Transparent" BorderThickness="0" Padding="0">
										<Border.Effect>
											<DropShadowEffect ShadowDepth="0" />
										</Border.Effect>
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" />
									</Border>
								</Popup>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Icon" Value="{x:Null}">
								<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<Trigger Property="IsHighlighted" Value="true">
								<Setter Property="Background" TargetName="Border" Value="#80CBC4" />
								<Setter Property="TextBlock.Foreground" TargetName="HeaderHost" Value="Black" />
							</Trigger>
							<Trigger Property="IsHighlighted" Value="false">
								<Setter Property="Background" TargetName="Border" Value="#263238" />
								<Setter Property="TextBlock.Foreground" TargetName="HeaderHost" Value="White" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Border" Value="#263238" />
								<Setter Property="TextBlock.Foreground" TargetName="HeaderHost" Value="Gray" />
							</Trigger>
							<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
								<Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
								<Setter Property="Foreground" Value="Black" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="Pink" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ToolbarSeparator" TargetType="{x:Type Separator}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Separator">
						<Border x:Name="Border" BorderThickness="0,1,0,0" BorderBrush="#FF1A2125">
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<conv:ZeroToCollapsedConverter x:Key="ZeroToCollapsedConverter"></conv:ZeroToCollapsedConverter>
		<conv:ZeroToDisabledConverter x:Key="ZeroToDisabledConverter"></conv:ZeroToDisabledConverter>
	</Window.Resources>
	<DockPanel>
		<ToolBarTray DockPanel.Dock="Top" Background="#FF263238">
			<ToolBar Style="{StaticResource ToolbarDark}">
				<Menu>
					<MenuItem Header="File" Style="{StaticResource ToolbarSection}">
						<MenuItem Header="New" Style="{StaticResource ToolbarButton}" />
						<MenuItem Header="Save" Style="{StaticResource ToolbarButton}" />
						<MenuItem Header="Load" Style="{StaticResource ToolbarButton}" />
						<MenuItem PreviewMouseUp="menuItemChilds" Header="Recent" Style="{StaticResource ToolbarButton}" Name="menuFileRecent" IsEnabled="{Binding Items.Count, Converter={StaticResource ZeroToDisabledConverter}, ElementName=menuFileRecent, Mode=OneWay}">
							<MenuItem Style="{StaticResource ToolbarButton}" Header="Test"></MenuItem>
						</MenuItem>
						<Separator Style="{StaticResource ToolbarSeparator}"></Separator>
						<MenuItem PreviewMouseUp="menuItemChilds" Style="{StaticResource ToolbarButton}" Header="Export" Name="menuFileExport" IsEnabled="{Binding Items.Count, Converter={StaticResource ZeroToDisabledConverter}, ElementName=menuFileExport, Mode=OneWay}" />
						<MenuItem PreviewMouseUp="menuItemChilds" Style="{StaticResource ToolbarButton}" Header="Import" Name="menuFileImport" IsEnabled="{Binding Items.Count, Converter={StaticResource ZeroToDisabledConverter}, ElementName=menuFileImport, Mode=OneWay}" />
					</MenuItem>
				</Menu>
			</ToolBar>
		</ToolBarTray>
		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem Background="#FF80CBC4">
				<TextBlock Name="lblStatusIndicator" Text="Ready" />
			</StatusBarItem>
		</StatusBar>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="100*" />
				<ColumnDefinition Width="480*" />
				<ColumnDefinition Width="181*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="335*" />
				<RowDefinition Height="98*" />
			</Grid.RowDefinitions>
			<Border Grid.Column="1" Background="Black">
				<directx:SharpDXElement Name="preview" SendResizeToGame="True" SendResizeDelay="00:00:02.00" LowPriorityRendering="False" />
			</Border>
		</Grid>
	</DockPanel>
</Window>